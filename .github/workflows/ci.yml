name: Continuous Integration of WEBAPP

on:
  pull_request_target:
    branches:
      - main

jobs:
  build:
    name: Continuous Integration WEBAPP
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install Dependencies
        run: npm install
        working-directory: ./src

      - name: Start GitHub-Hosted MySQL
        run: |
          sudo systemctl start mysql
          sudo systemctl status mysql
      
      - name: Wait for MySQL to be ready
        run: |
          for i in {30..0}; do
            if mysqladmin ping -h "localhost" --silent; then
              echo "✅ MySQL is ready!"
              break
            fi
            echo "⏳ Waiting for MySQL to start... ($i seconds remaining)"
            sleep 2
          done

      - name: Configure Database & User
        run: |
          sudo mysql -uroot -proot <<EOF
            CREATE DATABASE IF NOT EXISTS ${{ secrets.MYSQL_DATABASE }};
            CREATE USER IF NOT EXISTS '${{ secrets.MYSQL_USER }}'@'localhost' IDENTIFIED BY '${{ secrets.MYSQL_ROOT_PASSWORD }}';
            GRANT ALL PRIVILEGES ON ${{ secrets.MYSQL_DATABASE }}.* TO '${{ secrets.MYSQL_USER }}'@'localhost';
            FLUSH PRIVILEGES;
          EOF

      - name: Debug GitHub Secrets
        run: |
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}"
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}"
          echo "MYSQL_ROOT_PASSWORD is set (  masked for security)"

      - name: Configure Environment Variables
        run: |
          echo "DB_USERNAME=${{ secrets.MYSQL_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_DIALECT=mysql" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
        working-directory: ./src

      # - name: Run Database Migrations
      #   run: node config/database.js
      #   working-directory: ./src

      - name: Run Tests
        run: npm test -- Test/
        working-directory: ./src
        # env:
        #   DATABASE_URL: ${{ env.DATABASE_URL }}
        #   PORT: ${{ env.PORT }}